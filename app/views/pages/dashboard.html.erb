<div style="display: none;">
  <% @timevalues = Exchangetimevalue.where("platform_id = '1' AND crypto_id = '1'").last(300) %>
  <% @timevalues1 = Exchangetimevalue.where("platform_id = '2' AND crypto_id = '1'").last(300) %>
  <% @alltimevalues = [] %>
  <% @alltimevalues1 = [] %>
  <% @min = @timevalues[0].euro.to_f %>
  <% @max = @timevalues[0].euro.to_f %>
  <% @min1 = @timevalues1[0].euro.to_f %>
  <% @max1 = @timevalues1[0].euro.to_f %>

  <% @timevalues.each_with_index do |timeval, ind| %>
  <%= @alltimevalues << [timeval.created_at.to_time.to_i * 1000,timeval.euro] %>
    <% if timeval.euro < @min %>
      <%= @min = timeval.euro.to_f %>
    <% end%>
    <% if timeval.euro > @max%>
      <%= @max = timeval.euro.to_f %>
    <% end%>
  <%end%>

  <%@timevalues1.each_with_index do |timeval, ind| %>
    <%= @alltimevalues1 << [timeval.created_at.to_time.to_i * 1000,timeval.euro] %>
    <% if timeval.euro < @min1 %>
      <%= @min1 = timeval.euro.to_f %>
    <% end%>
    <% if timeval.euro > @max1 %>
      <%= @max1 = timeval.euro.to_f %>
    <% end%>
  <%end%>


  <div id="demochartline"><%= @alltimevalues %></div>
  <div id="demochartline1"><%= @alltimevalues1 %></div>
  <div id="demochartline2"><%= @alltimevalues2 %></div>

  <div id="allcompactfav"><%= @allplatcompact %></div>



  <div id="minval"><%= @min %></div>
  <div id="maxval"><%= @max %></div>

  <div id="minval1"><%= @min1 %></div>
  <div id="maxval1"><%= @max1 %></div>

  <div id="minmax"><%= @minmax%></div>
  <div id="platname"><%= @platname%></div>
  <div id="cryptosname"><%= @cryptosname%></div>

</div>


<div class="container">
  <div class="row col-md-12 mt20">
    <h2 class="col-md-6">
      Dashboard
    </h2>
    <div class="col-md-6 text-right">
      <%= link_to new_favorite_path do %>
        <span class="btn"><i class="fa fa-plus" aria-hidden="true"></i>Ajouter un favoris</span>
      <% end %>
    </div>
  </div>
  <div class="row mb50">
    <% if @favorites %>
      <% @favorites.each do |favorite| %>
        <div class="col-md-12 col-lg-4 col-sm-12">
          <%= link_to  do %>
            <div class="card-dashbord-favorite card-dashbord-favorite1">
              <div class="row">
                <div class="col-md-6">
                  <div class="card-dashbord-favorite-image">
                    <img src="<%= favorite.crypto.photo_url %>", width="100">
                  </div>
                </div>
                <div class="col-md-6">
                  <div class="card-favorite-content">
                    <% vp1 = Exchangetimevalue.where(crypto: favorite.crypto, platform: Platform.find(favorite.platform1.to_i)).last.euro %>
                    <% vp2 = Exchangetimevalue.where(crypto: favorite.crypto, platform: Platform.find(favorite.platform2.to_i)).last.euro %>
                    <% if vp1 > vp2 %>
                      <div style="margin-bottom: 10px;">
                        <h4 style="color: green"><%= vp1 %> €</h4>
                        <%= Platform.find(favorite.platform1.to_i).name %>
                      </div>
                      <div style="margin-top: 10px;">
                        <h4 style="color: #e8272a"><%= vp2 %> €</h4>
                        <%= Platform.find(favorite.platform2.to_i).name %>
                      </div>
                    <% else %>
                      <div style="margin-bottom: 10px;">
                        <h4 style="color: #e8272a"><%= vp1 %> €</h4>
                        <%= Platform.find(favorite.platform1.to_i).name %>
                      </div>
                      <div style="margin-top: 10px;">
                        <h4 style="color: green"><%= vp2 %> €</h4>
                        <%= Platform.find(favorite.platform2.to_i).name %>
                      </div>
                    <% end %>
                  </div>
                </div>
              </div>
              <div class="row text-center">
                <div class="col-md-6 offset-md-6">
                  <div class="text-right" style="margin-right: 5px;">
                    <%= link_to favorite_path(favorite), method: :delete, data: {confirm: "Etes vous sur de vouloir supprimer ce favoris?"} do %>
                      <i class="fa fa-trash-o" aria-hidden="true" style="color: gray"></i>
                    <% end %>
                  </div>
                </div>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    <% end %>

  </div>
  <h4 class="text-center" id="titleplat"></h4>
  <% if @favorites.size >= 1%>
  <div class='card mt20'>
    <div class="card-top">
      <h4 class="card-title"></h4>
    </div>
    <div class='card-content'>
      <div class="flot-chart">
        <div class="flot-chart-content" id="flot-line-chart-multi00"></div>
      </div>
    </div>
  </div>
<%end%>
  <!-- Line -->
  <div class="mt50" style="background-color: gray; height: 1px;"></div>
  <!-- End line -->


  <div class="col-sm-12">
    <div class="row mb50 mt50">
      <div class="col-sm-1">
        <i class="fa fa-info-circle fa-2x mt30" aria-hidden="true"></i>
      </div>
      <div class="col-sm-8">
        <h5>
          Pourquoi ajouter des favoris?
        </h5>
        <p>
          L'ajout d'un favoris vous permet de comparer, en temps réel, la valeur d'une cryptomonnaie par rapport à deux plateforme et vous permet également d'initier des alertes par SMS lorsqu'un de vos favoris atteint un seuil que vous pouvez définir.
        </p>
      </div>
      <div class="col-sm-3">
        <%= link_to new_favorite_path do %>
          <span class="btn btn-primary"><i class="fa fa-plus" aria-hidden="true"></i>Ajouter un favoris</span>
        <% end %>
      </div>
    </div>
  </div>
</div>



<%= content_for(:after_js) do %>
  <script type="text/javascript">

    var settitle = document.getElementById("titleplat");

    var cryptosname = document.getElementById("cryptosname");
    cryptosname = cryptosname.innerHTML;
    cryptosname = JSON.parse(cryptosname);


    var minmax = document.getElementById("minmax");
    minmax = minmax.innerHTML;
    minmax = JSON.parse(minmax);
    console.log(minmax);

    var platname = document.getElementById("platname");
    platname = platname.innerHTML;
    platname = JSON.parse(platname);


    var plat = document.getElementById("allcompactfav");
   plat = plat.innerHTML;
   plat = JSON.parse(plat);

   var carddash = document.getElementsByClassName("card-dashbord-favorite1");
   console.log(carddash);
      settitle.innerHTML = cryptosname[0][0] + " (" + cryptosname[0][1] + ")";
      datas = plat[0][0];
       datas1 = plat[0][1];
       $(function() {


           var oilprices = datas
           var exchangerates = datas1

           function euroFormatter(v, axis) {
               return v.toFixed(axis);
           }

           function doPlot(position) {

               $.plot($("#flot-line-chart-multi00"), [{
                   data: datas,
                   fill: true,
                   label: platname[0][0]
               }, {
                   data: datas1,
                   fill: true,


                   label: platname[0][1],

               }], {
                   series: {
                       lines: {
                           show: true,
                           lineWidth: 2,
                           fill: true,
                           fillColor: {
                               colors: [{
                                   opacity: 0.3
                               }, {
                                   opacity: 0.3
                               }]

                           }
                       }
                   },
                   xaxes: [{
                       mode: 'time',
                       unit: 'day',
                   }],
                   yaxes: [{
                       tickDecimals: 2,
                       min: minmax[0][0] - (minmax[0][1] - minmax[0][0]),
                       max: minmax[0][1] + (minmax[0][1] - minmax[0][0])

                   }, {
                       // align if we are to the right
                       alignTicksWithAxis: position == "right" ? 1 : null,
                       position: position,
                       tickFormatter: euroFormatter
                   }],
                   legend: {
                       position: 'sw'
                   },
                   colours: ["#60f305"],
                   grid: {
                       color: "#999999",
                       hoverable: true,
                       clickable: true,
                       tickColor: "#D4D4D4",
                       borderWidth: 0,
                       hoverable: true //IMPORTANT! this is needed for tooltip to work,

                   },
                   tooltip: true,
                   tooltipOpts: {
                       content: "x: %x  y: %y",

                       onHover: function(flotItem, $tooltipEl) {
                           // console.log(flotItem, $tooltipEl);
                       }
                   }

               });
           }

           doPlot("right");

           $("button").click(function() {
               doPlot($(this).text());
           });
       });

   carddash[0].addEventListener("click", function() {
       console.log("click on card");
       settitle.innerHTML = cryptosname[0][0] + " (" + cryptosname[0][1] + ")";
       datas = plat[0][0];
       datas1 = plat[0][1];

       $(function() {


           var oilprices = datas
           var exchangerates = datas1

           function euroFormatter(v, axis) {
               return v.toFixed(axis);
           }

           function doPlot(position) {

               $.plot($("#flot-line-chart-multi00"), [{
                   data: datas,
                   fill: true,
                   label: platname[0][0]
               }, {
                   data: datas1,
                   fill: true,


                   label: platname[0][1],

               }], {
                   series: {
                       lines: {
                           show: true,
                           lineWidth: 2,
                           fill: true,
                           fillColor: {
                               colors: [{
                                   opacity: 0.3
                               }, {
                                   opacity: 0.3
                               }]

                           }
                       }
                   },
                   xaxes: [{
                       mode: 'time',
                       unit: 'day',
                   }],
                   yaxes: [{
                       tickDecimals: 2,
                       min: minmax[0][0] - (minmax[0][1] - minmax[0][0]),
                       max: minmax[0][1] + (minmax[0][1] - minmax[0][0])

                   }, {
                       // align if we are to the right
                       alignTicksWithAxis: position == "right" ? 1 : null,
                       position: position,
                       tickFormatter: euroFormatter
                   }],
                   legend: {
                       position: 'sw'
                   },
                   colours: ["#60f305"],
                   grid: {
                       color: "#999999",
                       hoverable: true,
                       clickable: true,
                       tickColor: "#D4D4D4",
                       borderWidth: 0,
                       hoverable: true //IMPORTANT! this is needed for tooltip to work,

                   },
                   tooltip: true,
                   tooltipOpts: {
                       content: "x: %x  y: %y",

                       onHover: function(flotItem, $tooltipEl) {
                           // console.log(flotItem, $tooltipEl);
                       }
                   }

               });
           }

           doPlot("right");

           $("button").click(function() {
               doPlot($(this).text());
           });
       });




   });


if (carddash.length > 1){
   carddash[1].addEventListener("click", function() {
       console.log("click on card");
       settitle.innerHTML = cryptosname[1][0] + " (" + cryptosname[1][1] + ")";
       datas = plat[1][0];
       datas1 = plat[1][1];

       $(function() {


           var oilprices = datas
           var exchangerates = datas1

           function euroFormatter(v, axis) {
               return v.toFixed(axis);
           }

           function doPlot(position) {

               $.plot($("#flot-line-chart-multi00"), [{
                   data: datas,
                   fill: true,
                   label: platname[1][0]
               }, {
                   data: datas1,
                   fill: true,


                   label: platname[1][1],

               }], {
                   series: {
                       lines: {
                           show: true,
                           lineWidth: 2,
                           fill: true,
                           fillColor: {
                               colors: [{
                                   opacity: 0.3
                               }, {
                                   opacity: 0.3
                               }]

                           }
                       }
                   },
                   xaxes: [{
                       mode: 'time',
                       unit: 'day',
                   }],
                   yaxes: [{
                       tickDecimals: 2,
                       min: minmax[1][0] - (minmax[1][1] - minmax[1][0]),
                       max: minmax[1][1] + (minmax[1][1] - minmax[1][0])

                   }, {
                       // align if we are to the right
                       alignTicksWithAxis: position == "right" ? 1 : null,
                       position: position,
                       tickFormatter: euroFormatter
                   }],
                   legend: {
                       position: 'sw'
                   },
                   colours: ["#60f305"],
                   grid: {
                       color: "#999999",
                       hoverable: true,
                       clickable: true,
                       tickColor: "#D4D4D4",
                       borderWidth: 0,
                       hoverable: true //IMPORTANT! this is needed for tooltip to work,

                   },
                   tooltip: true,
                   tooltipOpts: {
                       content: "x: %x  y: %y",

                       onHover: function(flotItem, $tooltipEl) {
                           // console.log(flotItem, $tooltipEl);
                       }
                   }

               });
           }

           doPlot("right");

           $("button").click(function() {
               doPlot($(this).text());
           });
       });




   });
 }

   if (carddash.length > 2){
   carddash[2].addEventListener("click", function() {
       console.log("click on card");
       settitle.innerHTML = cryptosname[2][0] + " (" + cryptosname[2][1] + ")";
       datas = plat[2][0];
       datas1 = plat[2][1];

       $(function() {


           var oilprices = datas
           var exchangerates = datas1

           function euroFormatter(v, axis) {
               return v.toFixed(axis);
           }

           function doPlot(position) {

               $.plot($("#flot-line-chart-multi00"), [{
                   data: datas,
                   fill: true,
                   label: platname[2][0]
               }, {
                   data: datas1,
                   fill: true,


                   label: platname[2][1],

               }], {
                   series: {
                       lines: {
                           show: true,
                           lineWidth: 2,
                           fill: true,
                           fillColor: {
                               colors: [{
                                   opacity: 0.3
                               }, {
                                   opacity: 0.3
                               }]

                           }
                       }
                   },
                   xaxes: [{
                       mode: 'time',
                       unit: 'day',
                   }],
                   yaxes: [{
                       tickDecimals: 2,
                       min: minmax[2][0] - (minmax[2][1] - minmax[2][0]),
                       max: minmax[2][1] + (minmax[2][1] - minmax[2][0])

                   }, {
                       // align if we are to the right
                       alignTicksWithAxis: position == "right" ? 1 : null,
                       position: position,
                       tickFormatter: euroFormatter
                   }],
                   legend: {
                       position: 'sw'
                   },
                   colours: ["#60f305"],
                   grid: {
                       color: "#999999",
                       hoverable: true,
                       clickable: true,
                       tickColor: "#D4D4D4",
                       borderWidth: 0,
                       hoverable: true //IMPORTANT! this is needed for tooltip to work,

                   },
                   tooltip: true,
                   tooltipOpts: {
                       content: "x: %x  y: %y",

                       onHover: function(flotItem, $tooltipEl) {
                           // console.log(flotItem, $tooltipEl);
                       }
                   }
               });
           }
           doPlot("right");
           $("button").click(function() {
               doPlot($(this).text());
           });
       });
   });
 }




  </script>
<% end %>
